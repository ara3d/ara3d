# Release Notes 

### 2024-04-01

* Removing double precision mathematical structures in prep for changing to Plato mathematics
* Improved the deformable/transformable interfaces
* Removed all of the [AggressiveInline]

### 2024-04-01

* More cleaning up of geometry library
* Added Faceted and FlipFaces modifiers. 
* Added Unity demo/tests for platonic solids

### 2024-03-31

* Prisms
* Ruled geometry
* Cleaning up of geometry library
* Greatest common divisor algorithm 
* Relative prime function 
* Wrote algorithsm for regular star polygons, and regular star figures 
* Improved code for discretization of geometry 
* Created grid mesh class and functions for creating quad strips 
* Interpolation of array 
* 2D Array code 

### 2024-03-28

* Fixed tessellation algorithm 
* Writing a Json deserialization library 
* Working on the Git tool
* Added a JsonBuilder class
* Improved some of the reflection co
* Added more functions for working with d]]'### 2024-03-27

* Added catmull-clark subdivision surface
* Added weighted average
* More extension functions for IVertexNeighbourhood
* Cleaning up the SurfacePoint
* Github API querying code 
* Improving the tessellation code and Primtive shapes. 
* Fixed bug in torus. 

### 2024-03-26

* Adding vertex neighbourhoods with helper methods
* Separating curvature computation into its own class. 
* Adding proper modulo / remainder.  

### 2024-03-25

* Working on improved organization and definitions of primitives
* Renamed "transform" to "pose"
* Adding some implicit operators for converting to Matrix4x4 from pose, quaternion, and vectors. 
* Adding functions for rotations. I really want to replace "Qyaternion" with rotation.
* Added some functions for working with references. 
* Working on more useful surface interpolation functions, including curvature and laplace 
 
### 2024-03-24

* Created a parametric surface primitive for testing in Unity
* Fixed flaw in sphere function
* Improving some of the functions.
* Found bug: "closedU or closedV" will break the parametric surfaces
* Found bug: normals of parametric surface are wrong in the torus  
* Reorganized the primitive functions.  
* Started work on Quadray type
* Found bug: the normals are slightly wrong, should be average in both directions. 
* Added an angle class. 

### 2024-03-21

* Double clicking on error in general log now goes to correct file tab
* Log uses fixed-width font, which improves readability 
* Errors in log are now highlighted a color. 
* Added a new class (FileAndRange) to utils for storing and reporting file positions 
* Starting on version 1.4.3.
* Currently at 268 resolution errors
* Observed that tuple errors are a big reason for the errors 
* Added function for comparing paths (resolving to absolute path)
* Founds some code for fast updates of Unity meshes, and added sample scenes. 
* Down to 204 resolution errors. 
* Added proper resolution of Tuples, and types are now valid expressions (references and definitions).
* Down to 95 resolution errors.
* Type variables are now named correctly. 

### 2024-03-19

* Plato code viewer reports symbol resolution errors
* Markdown to HTML generator works much better
* CST contains errors 
* Working version of Bowerbird for Revit 2023
* Fixed web-server in utilities
* Plato code viewer has several more stages 
* Added a dog to the default scene in the Unity viewer 

### 2024-03-11

* Improving error recovery within Plato grammar, leveraging tools. 
* Double clicking on file list goes to correct editor
* Double clicking on error message, highlights location in editor
* Found issues in the Plato input. 

### 2024-03-10

* Improved error reporting in Parakeet (and as result Plato compiler)
* parse nodes now are created as pairs (begin and end)
* Changed the UI significantly of the Plato.Winforms tool. 

### 2024-03-09

* Adding an interface to distinguish types of CstNodes according to grammar. 
* Added a string functions to remove and add prefix
* Working on Plato to AST generation. 
* Merging PlatoParser code into Ara3D.Parsing 
* Improving the Plato.Winforms.Compiler
* NOTE: can't get published (I need to find way to conditionally build using Nuget references)

### 2024-03-08

* Moving to version 1.4.0 
* Created new project called Ara3D.Logging - unfinished (stuck on design of IJob)
* Moved a lot of code out of Ara3D.Utils to the logging library
* Working on fixing bugs in Markdown to HTML
* Added many new types, concepts, and mathematical functions to Plato (particularly for geometry)
* Plato standard libraries got split up in multiple files  
* Redoing the Plato.Winform compiler, so that it works again and is fixed to some stuff 
* Developing a "Pausable" concept
* Trying to make job system work well with tasks and asynchronous code. 

### 2024-03-04

* Moving to version 1.3.2
* Just found and fixed issue with Ara3D.Domo - change from x64 to AnyCPU
* Started adding badges (shields.io) to the readmes.
* Had to investigate between badgen and shields - shields has 10x more stars, and badge readme had broken badges on its readme!
* Started adding Source link to the packages for improved - https://github.com/dotnet/sourcelink 
* Renaming Ara3D.Math to Ara3D.Mathematics - hopefully prevent static name clashes with "math" name
* Fixed a lot of resulting compilation errors. 
* Found a bunch of cruft in the Ara3D.Math library inherited from Vim.Math3D which is cleaned up
* Starting the experiment of tracking release-notes 
* Nuget add command is now proceeded by a nuget remove.
* Added and created the Ara3D.Mathematics readme. 

### 2024-03-03

* Version 1.3.1 
* Worked on the devops side
* Removed the 'nuget-init.bat' script
* Figured out how to automate adding a generated package to nuget-feed post build 
* A lot of work spent studying and learning how MSBuild tasks work and what the correct macros to use are 
* Added the capability to create tags - now push.bat can also tag versions 
* More projects reference each other using Nuget packages
* Working on the Markdown to HTML converter 
* Working on the generic Ara3D.Parsing library and the parser class
* Added some HTML building code 