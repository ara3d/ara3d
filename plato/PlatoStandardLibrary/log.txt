[0:00.002] Creating compiler
[0:00.002] Opening files
[0:00.160] Starting compiling C:\Users\cdigg\git\ara3d\plato\PlatoWinFormsEditor\..\PlatoStandardLibrary\intrinsics.plato at 2024-01-08 11:06:36 AM
[0:00.160] Starting to parse 37 lines containing 1060 characters
[0:00.160] Tokenization phase
[0:00.169] Completed tokenization
[0:00.172] Starting main parse
[0:00.181] Completed parsing
[0:00.181] Gathering parse errors
[0:00.182] Found 0 errors
[0:00.182] Gathering parse nodes
[0:00.182] Found 760 nodes
[0:00.182] Creating parse tree
[0:00.186] Creating Concrete Syntax Tree (CST)
[0:00.237] Creating Abstract Syntax Tree (AST)
[0:00.302] Completed all steps, result is successful
[0:00.432] Starting compiling C:\Users\cdigg\git\ara3d\plato\PlatoWinFormsEditor\..\PlatoStandardLibrary\concepts.plato at 2024-01-08 11:06:37 AM
[0:00.432] Starting to parse 133 lines containing 2718 characters
[0:00.432] Tokenization phase
[0:00.452] Completed tokenization
[0:00.452] Starting main parse
[0:00.508] Completed parsing
[0:00.508] Gathering parse errors
[0:00.508] Found 0 errors
[0:00.508] Gathering parse nodes
[0:00.508] Found 1426 nodes
[0:00.508] Creating parse tree
[0:00.509] Creating Concrete Syntax Tree (CST)
[0:00.512] Creating Abstract Syntax Tree (AST)
[0:00.540] Completed all steps, result is successful
[0:00.601] Starting compiling C:\Users\cdigg\git\ara3d\plato\PlatoWinFormsEditor\..\PlatoStandardLibrary\types.plato at 2024-01-08 11:06:37 AM
[0:00.601] Starting to parse 866 lines containing 12863 characters
[0:00.601] Tokenization phase
[0:00.613] Completed tokenization
[0:00.613] Starting main parse
[0:00.620] Completed parsing
[0:00.620] Gathering parse errors
[0:00.620] Found 0 errors
[0:00.620] Gathering parse nodes
[0:00.625] Found 3781 nodes
[0:00.625] Creating parse tree
[0:00.626] Creating Concrete Syntax Tree (CST)
[0:00.628] Creating Abstract Syntax Tree (AST)
[0:00.635] Completed all steps, result is successful
[0:00.792] Starting compiling C:\Users\cdigg\git\ara3d\plato\PlatoWinFormsEditor\..\PlatoStandardLibrary\libraries.plato at 2024-01-08 11:06:37 AM
[0:00.792] Starting to parse 438 lines containing 11304 characters
[0:00.792] Tokenization phase
[0:00.810] Completed tokenization
[0:00.810] Starting main parse
[0:00.840] Completed parsing
[0:00.840] Gathering parse errors
[0:00.840] Found 0 errors
[0:00.840] Gathering parse nodes
[0:00.841] Found 6163 nodes
[0:00.841] Creating parse tree
[0:00.846] Creating Concrete Syntax Tree (CST)
[0:00.857] Creating Abstract Syntax Tree (AST)
[0:00.894] Completed all steps, result is successful
[0:00.894] Applying syntax coloring
[0:00.894] Completed syntax coloring
[0:00.901] Initializing Compiler
[0:00.901] Gathering parsers
[0:00.902] Gathering AST trees
[0:00.902] Gathering type declarations
[0:00.909] Creating symbol resolver
[0:00.912] Creating type definitions
[0:00.946] Found 0 symbol resolution errors
[0:00.947] Gathering function definitions
[0:00.948] Found 720 functions
[0:00.948] Checking semantics
[0:00.948] Creating Reified Types
[0:00.989] Found 116 types
[0:00.990] Created a total of 1253 reified functions
[0:00.990] Adding library functions to reified types
[0:01.077] Grouping Reified functions by name for faster type resolution
[0:01.080] Creating function analysis
[0:01.086] Gathering constraints for each function
[0:01.159] Function group call unresolved: no functions 58
Aggregate(Rest(xs), , (\(ParameterDefinition=acc$4676:Concept:Any, ParameterDefinition=cur$4678:Concept:Any) -> Primitive:Function) with ($138:(Array, $137:Any), String, (Function, $379:Any, $380:Any, $378:Any)) has 0 possible return types 
Add(ToString(First(xs)), Aggregate(Rest(xs), , (\(ParameterDefinition=acc$4676:Concept:Any, ParameterDefinition=cur$4678:Concept:Any) -> Primitive:Function)) with (String, $381:Any) has 0 possible return types 
And(f(First(xs)), f(Rest(xs))) with ($385:Any, $388:Any) has 0 possible return types 
All(xs, (\(ParameterDefinition=b$4732:Concept:Any) -> Primitive:Function) with ($158:(Array, $157:Any), (Function, $391:Any, $390:Any)) has 0 possible return types 
And(value, LessThanOrEquals(value, Max(x))) with ($183:Numerical, Boolean) has 0 possible return types 
LessThanOrEquals(Min(x), And(value, LessThanOrEquals(value, Max(x)))) with ($45:Numerical, $393:Any) has 0 possible return types 
And(Min(other), GreaterThanOrEquals(Max(x), Max(other))) with ($45:Numerical, Boolean) has 0 possible return types 
LessThanOrEquals(Min(x), And(Min(other), GreaterThanOrEquals(Max(x), Max(other)))) with ($45:Numerical, $395:Any) has 0 possible return types 
Clamp(x, Tuple(0, 1)) with (Number, (Tuple, Integer, Integer)) has 0 possible return types 
And(Min(x), LessThanOrEquals(value, Max(x))) with ($45:Numerical, Boolean) has 0 possible return types 
GreaterThanOrEquals(value, And(Min(x), LessThanOrEquals(value, Max(x)))) with ($237:Numerical, $398:Any) has 0 possible return types 
Aggregate(v, 0, Add) with ($240:(Vector, $239:Numerical), Integer, Function) has 0 possible return types 
Sum(Square(v)) with ($264:Numerical) has 0 possible return types 
SquareRoot(LengthSquared(v)) with ($247:Numerical) has 0 possible return types 
Zip(FieldValues(self), FieldValues(min), FieldValues(max), Between) with ($3:(Array, Any), $3:(Array, Any), $3:(Array, Any), Function) has 0 possible return types 
Divide(Pi, 180) with (Function, Integer) has 0 possible return types 
Multiply(x, Divide(Pi, 180)) with (Number, $404:Any) has 0 possible return types 
Multiply(2, Pi) with (Integer, Function) has 0 possible return types 
Multiply(x, Multiply(2, Pi)) with (Number, $406:Any) has 0 possible return types 
And(a, LessThanOrEquals(v, b)) with ($342:Comparable, Boolean) has 0 possible return types 
GreaterThanOrEquals(v, And(a, LessThanOrEquals(v, b))) with ($341:Comparable, $408:Any) has 0 possible return types 
Contains(i, v) with ($347:(Interval, $346:Numerical), $345:Value) has 0 possible return types 
Multiply(0.5, easeIn(Multiply(p, 2))) with (Number, $413:Any) has 0 possible return types 
Add(easeOut(Multiply(p, Subtract(2, 1))), 0.5) with ($417:Any, Number) has 0 possible return types 
Multiply(0.5, Add(easeOut(Multiply(p, Subtract(2, 1))), 0.5)) with (Number, $418:Any) has 0 possible return types 
LessThan(p, (0.5?Multiply(0.5, easeIn(Multiply(p, 2))):Multiply(0.5, Add(easeOut(Multiply(p, Subtract(2, 1))), 0.5)))) with (Number, $414:Any) has 0 possible return types 
Subtract(1, easeIn(Subtract(1, p))) with (Integer, $423:Any) has 0 possible return types 
InvertEaseFunc(p, QuadraticEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, QuadraticEaseIn, QuadraticEaseOut) with (Number, Function, Function) has 0 possible return types 
InvertEaseFunc(p, CubicEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, CubicEaseIn, CubicEaseOut) with (Number, Function, Function) has 0 possible return types 
InvertEaseFunc(p, QuarticEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, QuarticEaseIn, QuarticEaseOut) with (Number, Function, Function) has 0 possible return types 
InvertEaseFunc(p, QuinticEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, QuinticEaseIn, QuinticEaseOut) with (Number, Function, Function) has 0 possible return types 
InvertEaseFunc(p, SineEaseOut) with (Number, Function) has 0 possible return types 
Turns(Quarter(p)) with ($286:Numerical) has 0 possible return types 
Sin(Turns(Quarter(p))) with ($434:Any) has 0 possible return types 
BlendEaseFunc(p, SineEaseIn, SineEaseOut) with (Number, Function, Function) has 0 possible return types 
SquareRoot(FromOne(Pow2(p))) with ($270:Numerical) has 0 possible return types 
FromOne(SquareRoot(FromOne(Pow2(p)))) with ($437:Any) has 0 possible return types 
InvertEaseFunc(p, CircularEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, CircularEaseIn, CircularEaseOut) with (Number, Function, Function) has 0 possible return types 
InvertEaseFunc(p, ExponentialEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, ExponentialEaseIn, ExponentialEaseOut) with (Number, Function, Function) has 0 possible return types 
Turns(Quarter(p)) with ($286:Numerical) has 0 possible return types 
Multiply(Turns(Quarter(p)), Sin(Radians(Pow(2, Multiply(10, MinusOne(p)))))) with ($443:Any, Number) has 0 possible return types 
Multiply(13, Multiply(Turns(Quarter(p)), Sin(Radians(Pow(2, Multiply(10, MinusOne(p))))))) with (Integer, $444:Any) has 0 possible return types 
InvertEaseFunc(p, ElasticEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, ElasticEaseIn, ElasticEaseOut) with (Number, Function, Function) has 0 possible return types 
Turns(Half(p)) with ($282:Numerical) has 0 possible return types 
Sin(Turns(Half(p))) with ($448:Any) has 0 possible return types 
Multiply(p, Sin(Turns(Half(p)))) with (Number, $449:Any) has 0 possible return types 
Subtract(Pow3(p), Multiply(p, Sin(Turns(Half(p))))) with ($326:Numerical, $450:Any) has 0 possible return types 
InvertEaseFunc(p, BackEaseIn) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, BackEaseIn, BackEaseOut) with (Number, Function, Function) has 0 possible return types 
InvertEaseFunc(p, BounceEaseOut) with (Number, Function) has 0 possible return types 
BlendEaseFunc(p, BounceEaseIn, BounceEaseOut) with (Number, Function, Function) has 0 possible return types 
Function group call unresolved: ambiguous 1
Clamp(x, y) with ($189:(Interval, $188:Numerical), $191:(Interval, $190:Numerical)) has 2 possible return types $230:(Interval, $229:Numerical), $234:Numerical

[0:01.159] Outputting errors and warnings
